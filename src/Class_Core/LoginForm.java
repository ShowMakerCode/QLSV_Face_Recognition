/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Class_Core;

import Class_DAO.NhanVienDAO;
import Class_Entity.Remember_Password;
import Class_Entity.NhanVien;
import Class_Helper.*;
import Class_function.LoadDataFaceID;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.MalformedURLException;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author 98tae
 */
public class LoginForm extends javax.swing.JFrame {

    Connection con;
    ArrayList<Class_Entity.NhanVien> list_nv;
    NhanVien nv;
    public static boolean vaitro;
    public static MainForm mainform;
    String User_name = "", Pass_word = "";
    int check_isselected = 0;
    Remember_Password remember_password;
    ForgotPassword forgotpass;
    NhanVienDAO nvDao;
    Auth auth;
    ArrayList<String> listmaid;

    public LoginForm() {
        initComponents();
        init();
        TaoCauLenhBat();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbLogo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtpass = new javax.swing.JPasswordField();
        cbremember = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        btnlog = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        btnQuenMatKhau = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jlbLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ezgif-5-d81d8b9dc3.gif"))); // NOI18N

        jLabel1.setText("Tên Đăng Nhập");

        jLabel2.setText("Mật Khẩu");

        cbremember.setText("Nhớ Mật Khẩu ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbremember, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(txtUser)
                        .addComponent(txtpass, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)))
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbremember)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        btnlog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/log-in.png"))); // NOI18N
        btnlog.setText("Đăng Nhập");
        btnlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlogActionPerformed(evt);
            }
        });

        btnexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/exit_in.png"))); // NOI18N
        btnexit.setText("Kết Thúc");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        btnQuenMatKhau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/forgot.png"))); // NOI18N
        btnQuenMatKhau.setText("Quên Mật Khẩu ?");
        btnQuenMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuenMatKhauActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/qr-code.png"))); // NOI18N
        jButton1.setText("Đăng Nhập QR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/face-id.png"))); // NOI18N
        jButton2.setText("Đăng Nhâp FaceID");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnexit)
                        .addGap(18, 18, 18)
                        .addComponent(btnQuenMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnlog, jButton1});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnlog)
                        .addComponent(btnexit))
                    .addComponent(btnQuenMatKhau))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnQuenMatKhau, btnexit, btnlog, jButton1, jButton2});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jlbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jlbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlogActionPerformed
        if (Helper_Validate.isEmpty(txtUser, "Vui Lòng Không Để Trồng Tài Khoản")) {
            return;
        }
        if (Helper_Validate.isEmpty(txtpass, "Vui Lòng Không Để Trồng Mật Khẩu")) {
            return;
        }
        if (cbremember.isSelected()) {
            User_name = txtUser.getText();
            Pass_word = txtpass.getText();
            check_isselected = 1;
        } else {
            User_name = "";
            Pass_word = "";;
        }
        remember_password = new Remember_Password(User_name, Pass_word, check_isselected);
        remember_Password(remember_password);
        if (login()) {
            if (vaitro) {
                mainform.setVisible(true);
                dispose();
            }
            if (!vaitro) {
                mainform.setVisible(true);
                dispose();
            }
        }
    }//GEN-LAST:event_btnlogActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnQuenMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuenMatKhauActionPerformed
        forgotpass.setVisible(true);
    }//GEN-LAST:event_btnQuenMatKhauActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Class_function.QRCode().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        resetIDFace(".\\src\\Class_Helper\\Face-Detection-with-Name-Recognition\\idface.dat", "");
        String textsolo = xDocFile(".\\src\\Class_Helper\\Face-Detection-with-Name-Recognition\\No_Face_reconginition.dat");//nếu face bị xóa thì sẽ in vào file no_face nodata 
        if (textsolo.equals("NoData")) {//check xem file mặt có bị xóa không
            MyMessage.msgWarning("Không Có Dữ Liệu Gương Mặt ");
            return;
        }
        new LoadDataFaceID().setVisible(true);// cửa sổ load 
        String path = ".\\vbsbat\\runing_XID.vbs";// câu lệnh cmd run check face
        try {
            Desktop.getDesktop().open(new File(path));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        quetFaceId();//so sánh face và đăng nhập
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        runHideBat();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuenMatKhau;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnlog;
    private javax.swing.JCheckBox cbremember;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jlbLogo;
    private javax.swing.JTextField txtUser;
    private javax.swing.JPasswordField txtpass;
    // End of variables declaration//GEN-END:variables

    private boolean login() {
        for (int i = 0; i < list_nv.size(); i++) {
            NhanVien getlist = list_nv.get(i);
            if (txtUser.getText().equals(getlist.getMaNV())) {
                if (txtpass.getText().equals(getlist.getMatKhau())) {
                    this.vaitro = getlist.getVaiTro();
                    auth.user = getlist;
                    return true;
                }
            }
        }
        MyMessage.msgFalse("Sai Tài Khoản Mật Khẩu");
        return false;
    }

    private void LoadAccoutToArrayList() {
        try {
            list_nv = (ArrayList<NhanVien>) nvDao.SelectAll();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void remember_Password(Object object) {
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("remember_password.dat"));
            oos.writeObject(object);
            oos.close();
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }

    private void check_rememberPassword() {
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream("remember_password.dat"));
            Remember_Password rmb = (Remember_Password) ois.readObject();
            if (rmb.getTick() == 1) {
                cbremember.setSelected(true);
            }
            txtUser.setText(rmb.getUser());
            txtpass.setText(rmb.getPass());
            ois.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void init() {
        nvDao = new NhanVienDAO();
        setTitle("Form Đăng Nhập");
        this.setIconImage(XImage.AppImage());
        check_rememberPassword();
        mainform = new MainForm();
        forgotpass = new ForgotPassword();
        list_nv = new ArrayList<>();
        con = Helper_Connection.Connec();
        if (con != null) {
            LoadAccoutToArrayList();
        }
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public void quetFaceId() {
        listmaid = new ArrayList<String>();
        String sql = "select * from Gmail_FaceID"; // tru vấn và lấy ra các mã ID trong CSDL để so sánh với mã code mà python  render ra
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                listmaid.add(rs.getString("MaID")); // lấy mã vào listmaid
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        Thread thread = new Thread(new Runnable() { // chạy realtime so sánh code mã
            @Override
            public void run() {
                do {
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    String faceIdGetText = xDocFile(".\\src\\Class_Helper\\Face-Detection-with-Name-Recognition\\idface.dat"); // khi so sánh mặt nếu đúng python sẽ return vể 1 mã có trong CSDL
                    for (int i = 0; i < listmaid.size(); i++) { // so sánh listmaid với mã trong idface.dat để cấp quyền truy cập
                        if (faceIdGetText.equals(listmaid.get(i))) {
                            NhanVien nv = getManv(listmaid.get(i)); // lấy list vào mã nv để đăng nhập
                            dispose();
                            MyMessage.msgTrue("Xin Chào  : " + nv.getHoTen());
                            Auth.user = new NhanVien(nv.getMaNV(), nv.getMatKhau(), nv.getHoTen(), nv.getVaiTro());
                            mainform.setVisible(true);
                            return;
                        }
                    }
                } while (true);
            }
        });
        thread.start();
    }

    public String xDocFile(String path) { // đọc file
        try {
            FileInputStream fos = new FileInputStream(path);
            byte[] b = fos.readAllBytes();
            String txt = new String(b);
            return txt;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;

    }

    private void resetIDFace(String path, String noidung) { //làm thư mục idface.dat rỗng để python sinh mã code so sánh với hệ thống 
        BufferedWriter bw = null;
        if (!new File(path).exists()) {
            try {
                new File(path).createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            bw = new BufferedWriter(new FileWriter(path));
            bw.write(noidung);
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void TaoCauLenhBat() { // tạo câu lệnh chạy cmd
        try {
            File file = new File(".");
            String[] a = file.getCanonicalPath().split("\\\\");
            String stringArray[] = a;
            StringBuffer sb = new StringBuffer();
            for (int i = 0; i < stringArray.length; i++) {
                sb.append("/" + stringArray[i]);
            }
            String str = sb.toString().substring(1);
            String x = "@echo off \n" + str.replaceAll("/", "\ncd ") + "\ncd src\n"
                    + "cd Class_Helper\n"
                    + "cd Face-Detection-with-Name-Recognition\n"
                    + "cls\n"
                    + "python 03_face_recognition.py\n"
                    + "exit";
            BufferedWriter bw = null;
            try {
                bw = new BufferedWriter(new FileWriter(new File(".\\vbsbat\\runningXID.bat")));
                bw.write(x);
                bw.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    bw.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }

    private NhanVien getManv(String maID) { // lấy mã nv dựa trên mã ID để cấp quyền truy cập 
        String sql = "select NhanVien.MaNV,MatKhau,HoTen,VaiTro"
                + " from NhanVien join Gmail_FaceID on NhanVien.MaNV = Gmail_FaceID.MANV\n"
                + "where MaID = ?";
        try {
            PreparedStatement pt = con.prepareStatement(sql);
            pt.setString(1, maID);
            ResultSet rs = pt.executeQuery();
            if (rs.next()) {
                return new NhanVien(rs.getString(1), rs.getString(2), rs.getString(3), rs.getBoolean(4));
            }
        } catch (Exception e) {
        }

        return null;
    }

    private void runHideBat() { // tạo file vbs chạy ẩn trên nền cửa sổ
        try {
            File file = new File("vbsbat\\runing_XID.vbs");
            if (!file.exists()) {
                try {
                    file.createNewFile();
                } catch (IOException ex) {
                    Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            String a = String.valueOf(new File("vbsbat\\runningXID.bat").toURI().toURL());
            a = a.substring(6);
            String finalattacker = "main\n"
                    + "Sub main\n"
                    + "Set oShell = CreateObject (\"Wscript.Shell\") \n"
                    + "Dim strArgs\n"
                    + "strArgs = \"cmd /c " + a + "\"\n"
                    + "oShell.Run strArgs, 0, false\n"
                    + "End Sub";
            resetIDFace("vbsbat\\runing_XID.vbs", finalattacker);
        } catch (MalformedURLException ex) {
            ex.printStackTrace();
        }

    }
}
